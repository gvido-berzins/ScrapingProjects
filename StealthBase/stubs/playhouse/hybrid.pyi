from _typeshed import Incomplete
from peewee import ModelDescriptor

class hybrid_method(ModelDescriptor):
    func: Incomplete
    expr: Incomplete
    def __init__(self, func, expr: Incomplete | None = ...) -> None: ...
    def __get__(self, instance, instance_type): ...
    def expression(self, expr): ...

class hybrid_property(ModelDescriptor):
    fget: Incomplete
    fset: Incomplete
    fdel: Incomplete
    expr: Incomplete
    def __init__(self, fget, fset: Incomplete | None = ..., fdel: Incomplete | None = ..., expr: Incomplete | None = ...) -> None: ...
    def __get__(self, instance, instance_type): ...
    def __set__(self, instance, value) -> None: ...
    def __delete__(self, instance) -> None: ...
    def setter(self, fset): ...
    def deleter(self, fdel): ...
    def expression(self, expr): ...
