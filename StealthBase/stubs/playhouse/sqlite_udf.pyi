from _typeshed import Incomplete
from playhouse._sqlite_ext import TableFunction as TableFunction

SQLITE_DATETIME_FORMATS: Incomplete

def format_date_time_sqlite(date_value): ...

CONTROL_FLOW: str
DATE: str
FILE: str
HELPER: str
MATH: str
STRING: str
AGGREGATE_COLLECTION: Incomplete
TABLE_FUNCTION_COLLECTION: Incomplete
UDF_COLLECTION: Incomplete

class synchronized_dict(dict):
    def __init__(self, *args, **kwargs) -> None: ...
    def __getitem__(self, key): ...
    def __setitem__(self, key, value): ...
    def __delitem__(self, key): ...

STATE: Incomplete
SETTINGS: Incomplete

def aggregate(*groups): ...
def table_function(*groups): ...
def udf(*groups): ...
def register_aggregate_groups(db, *groups) -> None: ...
def register_table_function_groups(db, *groups) -> None: ...
def register_udf_groups(db, *groups) -> None: ...
def register_groups(db, *groups) -> None: ...
def register_all(db) -> None: ...
def if_then_else(cond, truthy, falsey: Incomplete | None = ...): ...
def strip_tz(date_str): ...
def human_delta(nseconds, glue: str = ...): ...
def file_ext(filename): ...
def file_read(filename): ...
def gzip(data, compression: int = ...): ...
def gunzip(data): ...
def hostname(url): ...
def toggle(key): ...
def setting(key, value: Incomplete | None = ...): ...
def clear_settings() -> None: ...
def clear_toggles() -> None: ...
def randomrange(start, end: Incomplete | None = ..., step: Incomplete | None = ...): ...
def gauss_distribution(mean, sigma): ...
def sqrt(n): ...
def tonumber(s): ...
def substr_count(haystack, needle): ...
def strip_chars(haystack, chars): ...

class _heap_agg:
    heap: Incomplete
    ct: int
    def __init__(self) -> None: ...
    def process(self, value): ...
    def step(self, value) -> None: ...

class _datetime_heap_agg(_heap_agg):
    def process(self, value): ...

total_seconds: Incomplete

class mintdiff(_datetime_heap_agg):
    def finalize(self): ...

class avgtdiff(_datetime_heap_agg):
    def finalize(self): ...

class duration:
    def __init__(self) -> None: ...
    def step(self, value) -> None: ...
    def finalize(self): ...

class mode:
    items: Incomplete
    def __init__(self) -> None: ...
    def step(self, *args) -> None: ...
    def finalize(self): ...
    def __init__(self) -> None: ...
    def step(self, item) -> None: ...
    def finalize(self): ...

class minrange(_heap_agg):
    def finalize(self): ...

class avgrange(_heap_agg):
    def finalize(self): ...

class _range:
    name: str
    def __init__(self) -> None: ...
    def step(self, value) -> None: ...
    def finalize(self): ...

class stddev:
    n: int
    values: Incomplete
    def __init__(self) -> None: ...
    def step(self, v) -> None: ...
    def finalize(self): ...

damerau_levenshtein_dist: Incomplete
levenshtein_dist: Incomplete
str_dist: Incomplete
median: Incomplete

class RegexSearch(TableFunction):
    params: Incomplete
    columns: Incomplete
    name: str
    def initialize(self, regex: Incomplete | None = ..., search_string: Incomplete | None = ...) -> None: ...
    def iterate(self, idx): ...

class DateSeries(TableFunction):
    params: Incomplete
    columns: Incomplete
    name: str
    start: Incomplete
    stop: Incomplete
    step_seconds: Incomplete
    format: str
    def initialize(self, start, stop, step_seconds: int = ...) -> None: ...
    def iterate(self, idx): ...
